{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","chosenTab","find","tab","id","className","map","title","classNames","href","onClick","content","App","useState","selectedTab","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAAuB,SAAC,GAI9B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAYH,EAAKI,MACrB,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MACfD,EAAK,GAEV,OACE,sBAAKO,UAAU,gBAAf,UACE,6BACGP,EAAKQ,KAAI,SAAAH,GACR,IAAQC,EAAcD,EAAdC,GAAIG,EAAUJ,EAAVI,MAEZ,OAEE,oBACE,UAAQ,MACRF,UAAWG,IAAW,CACpB,YAAaL,EAAIC,KAAOH,EAAUG,KAHtC,SAME,mBACEK,KAAI,WAAML,GACV,UAAQ,UACRM,QAAS,WACHP,EAAIC,KAAOH,EAAUG,IACvBJ,EAAcG,IALpB,SASGI,WAQX,qBAAKF,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAUU,cC5CNb,EAAO,CAClB,CAAEM,GAAI,QAASG,MAAO,QAASI,QAAS,eACxC,CAAEP,GAAI,QAASG,MAAO,QAASI,QAAS,eACxC,CAAEP,GAAI,QAASG,MAAO,QAASI,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAASf,EAAK,IAApD,mBAAOgB,EAAP,KAAoBC,EAApB,KAEA,OACE,sBAAKV,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBS,EAAYP,SAGlC,qBAAK,UAAQ,gBAAb,SAEE,cAAC,EAAD,CACET,KAAMA,EACNC,cAAee,EAAYV,GAC3BJ,cAAee,UCvBzBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.95fa729f.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ninterface Prop {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected : (tab: Tab) => void,\n}\n\nexport const Tabs: React.FC<Prop> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const chosenTab = tabs.find(\n    tab => tab.id === selectedTabId,\n  ) || tabs[0];\n\n  return (\n    <div className=\"tabs is-boxed\">\n      <ul>\n        {tabs.map(tab => {\n          const { id, title } = tab;\n\n          return (\n\n            <li\n              data-cy=\"Tab\"\n              className={classNames({\n                'is-active': tab.id === chosenTab.id,\n              })}\n            >\n              <a\n                href={`#${id}`}\n                data-cy=\"TabLink\"\n                onClick={() => {\n                  if (tab.id !== chosenTab.id) {\n                    onTabSelected(tab);\n                  }\n                }}\n              >\n                {title}\n              </a>\n            </li>\n\n          );\n        })}\n      </ul>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {chosenTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <div data-cy=\"TabsComponent\">\n\n        <Tabs\n          tabs={tabs}\n          selectedTabId={selectedTab.id}\n          onTabSelected={setSelectedTab}\n        />\n\n        {/* <div className=\"block\" data-cy=\"TabContent\">\n          {selectedTab.content}\n        </div> */}\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}